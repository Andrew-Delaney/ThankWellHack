{"version":3,"sources":["assets/logo.png","assets/thanks.jpg","components/HeaderBar/HeaderBar.jsx","components/ThankYouCard/ThankYouCard.jsx","components/Dashboard/Dashboard.jsx","components/Homepage/Homepage.jsx","components/ThanksReceiver/ThanksReceiver.jsx","components/ActionButton/ActionButton.jsx","components/ThanksComposer/ThanksComposer.jsx","components/GiveThanks/GiveThanks.jsx","components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderBar","className","to","src","logo","alt","ThankYouCard","image","message","recipient","id","Dashboard","useState","allThanks","setAllThanks","useEffect","fetch","then","response","json","data","map","thanks","index","console","log","key","thanksImg","Homepage","ThanksReceiver","props","state","imageId","this","match","params","setState","undefined","decodedContent","type","Component","ActionButton","buttonText","onClick","ThanksComposer","textInput","setTextInput","setRecipient","fileSelectorValue","setFileSelectorValue","fileSelector","document","createElement","setAttribute","onchange","e","target","files","handleFileSelect","preventDefault","click","htmlFor","onChange","input","value","placeholder","FormData","append","method","body","submit","GiveThanks","Footer","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,oWCsB5BC,G,MAhBG,kBACd,yBAAKC,UAAU,aACX,yBAAKA,UAAU,iDACX,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,aAAY,yBAAKE,IAAKC,IAAMC,IAAI,OAAOJ,UAAU,UACxE,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAMA,UAAU,iBAAiBC,GAAG,KAApC,QACA,kBAAC,IAAD,CAAMD,UAAU,iBAAiBC,GAAG,gBAApC,eACA,kBAAC,IAAD,CAAMD,UAAU,iBAAiBC,GAAG,WAApC,UACA,kBAAC,IAAD,CAAMD,UAAU,iBAAiBC,GAAG,aAApC,YACA,yBAAKD,UAAU,kBAAiB,kBAAC,IAAD,OAChC,yBAAKA,UAAU,kBAAiB,kBAAC,IAAD,Y,OCCjCK,G,MAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,GAA9B,OACf,yBAAKT,UAAU,kDACX,kBAAC,IAAD,CAAMC,GAAE,kBAAaQ,IACjB,yBAAKT,UAAU,qBAAqBE,IAAKI,EAAOF,IAAI,eACpD,yBAAKJ,UAAU,qBACX,wBAAIA,UAAU,+BAA+BQ,GAC7C,yBAAKR,UAAU,6BAA6BO,Q,iBCmB7CG,G,MAxBG,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACbC,EADa,KACFC,EADE,KASpB,OANAC,qBAAW,WACPC,MAAM,YACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAaM,QAChC,IAGC,yBAAKnB,UAAU,aACX,wBAAIA,UAAU,qCAAd,QACA,yBAAKA,UAAU,kCAEPY,GAAaA,EAAUQ,KAAI,SAACC,EAAQC,GAEhC,OADAC,QAAQC,IAAIH,GACL,kBAAC,EAAD,CAAcI,IAAKH,EAAOd,UAAWa,EAAOb,UAAWD,QAASc,EAAOd,QAASD,MAAOe,EAAOf,MAAQe,EAAOf,MAAQoB,IAAWjB,GAAIY,EAAOZ,YCZ3JkB,EAPE,kBACb,yBAAK3B,UAAU,YACX,kBAAC,EAAD,Q,wCCFa4B,G,wDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACT,OAAQ,CAACZ,GAAI,KAAMF,QAAS,KAAMC,UAAW,KAAMuB,QAAS,MAAOzB,MAAO,MAFzE,E,gEAKE,IAAD,OAChBS,MAAM,eAAD,OAAgBiB,KAAKH,MAAMI,MAAMC,OAAOzB,KACxCO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEF,OADA,EAAKgB,SAAL,2BAAkB,EAAKL,OAAvB,IAA8BT,OAAQF,KAC/BA,KAEVH,MAAK,SAAAG,QACmBiB,IAAjBjB,EAAKY,SACLhB,MAAM,cAAD,OAAeI,EAAKY,UACpBf,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKgB,SAAL,2BAAkB,EAAKL,OAAvB,IAA8BxB,MAAOa,a,+BAMnE,OACI,yBAAKnB,UAAU,kBACX,wBAAIA,UAAU,uBAAd,QAA0CgC,KAAKF,MAAMT,OAAOb,UAA5D,OACA,yBAAKR,UAAU,mEACX,yBAAKA,UAAU,oDACX,8BAAOgC,KAAKF,MAAMT,OAAOd,UAE7B,yBAAKP,UAAU,oDACdgC,KAAKF,MAAMxB,OAAS0B,KAAKF,MAAMxB,MAAM+B,gBAAkB,yBAAKrC,UAAU,QACVE,IAAG,qBAAgB8B,KAAKF,MAAMxB,MAAMgC,KAAjC,mBAAgDN,KAAKF,MAAMxB,MAAM+B,gBACpEjC,IAAI,iBAGrE,wBAAIJ,UAAU,4BAAd,mB,GArC4BuC,cCG7BC,G,MAFI,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAAf,OAA6B,4BAAQ1C,UAAU,eAAe0C,QAASA,GAAUD,K,gBCkErFE,G,MAhEQ,WAAO,IAAD,EACShC,mBAAS,IADlB,mBAClBiC,EADkB,KACPC,EADO,OAESlC,mBAAS,IAFlB,mBAElBH,EAFkB,KAEPsC,EAFO,OAGyBnC,mBAAS,MAHlC,mBAGlBoC,EAHkB,KAGCC,EAHD,OAIFrC,oBAAS,WAC5B,IAAMsC,EAAeC,SAASC,cAAc,SAI5C,OAHAF,EAAaG,aAAa,OAAQ,QAClCH,EAAaG,aAAa,KAAM,oBAChCH,EAAaI,SAAW,SAACC,GAAD,OAAON,EAAqBM,EAAEC,OAAOC,MAAM,KAC5DP,KALJA,EAJkB,oBA2BnBQ,EAAmB,SAACH,GACtBA,EAAEI,iBACFT,EAAaU,SAGjB,OACI,yBAAK3D,UAAU,kBACX,wBAAI4D,QAAQ,eAAe5D,UAAU,+BAArC,eACA,yBAAKA,UAAU,wBACX,2BAAO4D,QAAQ,gBACX,0BAAM5D,UAAU,yCAAhB,OACA,2BAAOsC,KAAK,OAAOtC,UAAU,gCACtB6D,SAAU,SAAAC,GAAK,OAAIhB,EAAagB,EAAMP,OAAOQ,WAExD,8BACItD,GAAG,eACHT,UAAU,0CACV+D,MAAOnB,EACPiB,SAAU,SAAAC,GAAK,OAAIjB,EAAaiB,EAAMP,OAAOQ,QAC7CC,YAAY,wCAGhB,yBAAKhE,UAAU,8BACX,kBAAC,IAAD,CAAOA,UAAU,kCAAkC0C,QAASe,IAC5D,kBAAC,IAAD,CAAMzD,UAAU,kCAAkC0C,QAASe,IAC3D,yBAAKzD,UAAU,qCACX,kBAAC,EAAD,CACIyC,WAAW,QACXC,QAAS,kBA3ClB,WACX,GAA0B,OAAtBK,EAA4B,CAC5B,IAAM5B,EAAO,IAAI8C,SACjB9C,EAAK+C,OAAO,QAASnB,GAErBhC,MAAM,uBAAD,OAAwB6B,EAAxB,sBAA+CpC,GAAa,CAAC2D,OAAQ,OAAQC,KAAMjD,IACnFH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAII,QAAQC,IAAIL,WAE9BJ,MAAM,uBAAD,OAAwB6B,EAAxB,sBAA+CpC,GAAa,CAAC2D,OAAQ,SACrEnD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAII,QAAQC,IAAIL,MAgCCkD,YCnD5BC,EAPI,kBACf,yBAAKtE,UAAU,YACX,kBAAC,EAAD,Q,gCCwBOuE,G,MAvBA,kBACX,yBAAKvE,UAAU,gBACX,yBAAKA,UAAU,iEACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,QAAd,aACA,wEACA,yBAAKA,UAAU,SACX,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,QAGR,yBAAKA,UAAU,4DACX,kBAAC,IAAD,CAAMA,UAAU,cAAcC,GAAG,KAAjC,QACA,kBAAC,IAAD,CAAMD,UAAU,cAAcC,GAAG,gBAAjC,eACA,kBAAC,IAAD,CAAMD,UAAU,cAAcC,GAAG,WAAjC,UACA,kBAAC,IAAD,CAAMD,UAAU,cAAcC,GAAG,aAAjC,iBCSDuE,EAtBH,WACR,OACI,kBAAC,IAAD,KACI,yBAAKxE,UAAU,kDACX,yBAAKA,UAAU,QACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,6BACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOyE,KAAK,cACZ,kBAAC,IAAD,CAAOA,KAAK,YACZ,kBAAC,IAAD,CAAOA,KAAK,cAAcC,UAAW9C,IACrC,kBAAC,IAAD,CAAO6C,KAAK,gBAAe,kBAAC,EAAD,OAC3B,kBAAC,IAAD,CAAOA,KAAK,KAAI,kBAAC,EAAD,UAI5B,kBAAC,EAAD,SCdIE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7C,MACvB,2DCZN8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF/B,SAASgC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrE,MAAK,SAAAsE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlE,QAAQkE,MAAMA,EAAMlF,c","file":"static/js/main.a2456931.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.449e68db.png\";","module.exports = __webpack_public_path__ + \"static/media/thanks.5fff3788.jpg\";","import React from 'react';\r\nimport {Bell, User} from 'react-feather';\r\nimport {Link} from 'react-router-dom';\r\nimport logo from \"../../assets/logo.png\";\r\nimport \"./HeaderBar.scss\";\r\n\r\nconst HeaderBar = () => (\r\n    <div className=\"HeaderBar\">\r\n        <div className=\"d-flex flex-row justify-content-between w-100\">\r\n            <Link to=\"/\" className=\"logo-link\"><img src={logo} alt=\"logo\" className=\"logo\"/></Link>\r\n            <div className=\"d-flex links\">\r\n                <Link className=\"HeaderBar-link\" to=\"/\">Home</Link>\r\n                <Link className=\"HeaderBar-link\" to=\"/give-thanks\">Give Thanks</Link>\r\n                <Link className=\"HeaderBar-link\" to=\"/groups\">Groups</Link>\r\n                <Link className=\"HeaderBar-link\" to=\"/messages\">Messages</Link>\r\n                <div className=\"HeaderBar-icon\"><Bell/></div>\r\n                <div className=\"HeaderBar-icon\"><User/></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default HeaderBar;\r\n","import React from 'react';\r\n\r\nimport \"./ThankYouCard.scss\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nvar ThankYouCard = ({ image, message, recipient, id }) => (\r\n    <div className=\"ThankYouCard col-10 col-sm-8 col-md-4 col-lg-3\">\r\n        <Link to={`/thanks/${id}`}>\r\n            <img className=\"ThankYouCard-image\" src={image} alt=\"Thank you!\"></img>\r\n            <div className=\"ThankYouCard-text\">\r\n                <h5 className=\"ThankYouCard-text-recipient\">{recipient}</h5>\r\n                <div className=\"ThankYouCard-text-message\">{message}</div>\r\n            </div>\r\n        </Link>\r\n    </div>\r\n);\r\n\r\nexport default ThankYouCard","import React, {useEffect, useState} from 'react';\r\nimport ThankYouCard from '../ThankYouCard/ThankYouCard';\r\nimport thanksImg from \"../../assets/thanks.jpg\";\r\n\r\nimport \"./Dashboard.scss\";\r\n\r\nconst Dashboard = () => {\r\n    const [allThanks, setAllThanks] = useState([]);\r\n\r\n    useEffect( () => {\r\n        fetch(`/api/all`)\r\n            .then(response => response.json())\r\n            .then(data => setAllThanks(data));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Dashboard\">\r\n            <h2 className=\"mt-3 mb-3 pb-4 font-weight-bolder\">Home</h2>\r\n            <div className=\"Dashboard-cards row no-gutters\">\r\n                {\r\n                    allThanks && allThanks.map((thanks, index) => {\r\n                        console.log(thanks);\r\n                        return <ThankYouCard key={index} recipient={thanks.recipient} message={thanks.message} image={thanks.image ? thanks.image : thanksImg} id={thanks.id}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport Dashboard from \"../Dashboard/Dashboard\";\r\n\r\nconst Homepage = () => (\r\n    <div className=\"Homepage\">\r\n        <Dashboard/>\r\n    </div>\r\n);\r\n\r\n\r\nexport default Homepage;\r\n","import React, {Component} from 'react';\r\nimport \"./ThanksReceiver.scss\";\r\n\r\nexport default class ThanksReceiver extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {thanks: {id: null, message: null, recipient: null, imageId: null}, image: null};\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`/api/thanks/${this.props.match.params.id}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({...this.state, thanks: data});\r\n                return data;\r\n            })\r\n            .then(data => {\r\n                if (data.imageId !== undefined) {\r\n                    fetch(`/api/image/${data.imageId}`)\r\n                        .then(response => response.json())\r\n                        .then(data => this.setState({...this.state, image: data}))\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ThanksComposer\">\r\n                <h1 className=\"recipient-name pb-5\">Dear {this.state.thanks.recipient}...</h1>\r\n                <div className=\"message-content d-flex flex-column justify-content-between mr-2\">\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                        <span>{this.state.thanks.message}</span>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                    {this.state.image && this.state.image.decodedContent && <img className=\"image\"\r\n                                                                                 src={`data:image/${this.state.image.type};base64,${this.state.image.decodedContent}`}\r\n                                                                                 alt=\"Thank You!\"/>}\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"recipient-name pb-4 pt-2\">Thank you.</h1>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n","import React from 'react';\r\n\r\nimport \"./ActionButton.scss\";\r\n\r\nvar ActionButton = ({ buttonText, onClick }) => <button className=\"ActionButton\" onClick={onClick}>{buttonText}</button>;\r\n\r\nexport default ActionButton;","import React, { useState } from 'react';\r\nimport ActionButton from '../ActionButton/ActionButton';\r\nimport { Image, Film } from 'react-feather';\r\n\r\nimport \"./ThanksComposer.scss\";\r\n\r\nconst ThanksComposer = () => {\r\n    const [textInput, setTextInput] = useState(\"\");\r\n    const [recipient, setRecipient] = useState(\"\");\r\n    const [fileSelectorValue, setFileSelectorValue] = useState(null);\r\n    const [fileSelector] = useState(() => {\r\n        const fileSelector = document.createElement('input');\r\n        fileSelector.setAttribute('type', 'file');\r\n        fileSelector.setAttribute('id', 'testFileSelector');\r\n        fileSelector.onchange = (e) => setFileSelectorValue(e.target.files[0]);\r\n        return fileSelector;\r\n    });\r\n\r\n    const submit = () => {\r\n        if (fileSelectorValue !== null) {\r\n            const data = new FormData();\r\n            data.append('image', fileSelectorValue);\r\n\r\n            fetch(`/api/thanks?message=${textInput}&recipient=${recipient}`, {method: \"POST\", body: data})\r\n                .then(response => response.json())\r\n                .then(data => console.log(data));\r\n        } else {\r\n            fetch(`/api/thanks?message=${textInput}&recipient=${recipient}`, {method: \"POST\"})\r\n                .then(response => response.json())\r\n                .then(data => console.log(data));\r\n        }\r\n    };\r\n\r\n    const handleFileSelect = (e) => {\r\n        e.preventDefault();\r\n        fileSelector.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"ThanksComposer\">\r\n            <h2 htmlFor=\"thanks-input\" className=\"m-3 pb-4 font-weight-bolder\">Give Thanks</h2>\r\n            <div className=\"ThanksComposer-input\">\r\n                <label htmlFor=\"thanks-input\">\r\n                    <span className=\"recipient-input pr-2 font-weight-bold\">To:</span>\r\n                    <input type=\"text\" className=\"recipient-input thanks-border\"\r\n                           onChange={input => setRecipient(input.target.value)}/>\r\n                </label>\r\n                <textarea\r\n                    id=\"thanks-input\"\r\n                    className=\"ThanksComposer-input-text thanks-border\"\r\n                    value={textInput}\r\n                    onChange={input => setTextInput(input.target.value)}\r\n                    placeholder=\"Personalise your thank you message.\"\r\n                >\r\n                </textarea>\r\n                <div className=\"ThanksComposer-input-lower\">\r\n                    <Image className=\"ThanksComposer-input-lower-icon\" onClick={handleFileSelect}/>\r\n                    <Film className=\"ThanksComposer-input-lower-icon\" onClick={handleFileSelect}/>\r\n                    <div className=\"ThanksComposer-input-lower-submit\">\r\n                        <ActionButton\r\n                            buttonText=\"Thank\"\r\n                            onClick={() => submit()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ThanksComposer;\r\n","import React from 'react';\r\nimport ThanksComposer from '../ThanksComposer/ThanksComposer';\r\n\r\nconst GiveThanks = () => (\r\n    <div className=\"Homepage\">\r\n        <ThanksComposer/>\r\n    </div>\r\n);\r\n\r\n\r\nexport default GiveThanks;\r\n","import React from 'react';\r\nimport {AtSign, Bell, Facebook, Twitter} from 'react-feather';\r\n\r\nimport \"./Footer.scss\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Footer = () => (\r\n    <div className=\"Footer w-100\">\r\n        <div className=\"container-fluid container d-flex justify-content-around h-100\">\r\n            <div className=\"pl-5\">\r\n                <h4 className=\"mt-5\">ThankWell</h4>\r\n                <h6>Send a personal thank you in the moment.</h6>\r\n                <div className=\"icons\">\r\n                    <Twitter/>\r\n                    <Facebook/>\r\n                    <AtSign/>\r\n                    <Bell/>\r\n                </div>\r\n            </div>\r\n            <div className=\"links d-flex flex-row justify-content-center pr-5 h-100 \">\r\n                <Link className=\"Footer-link\" to=\"/\">Home</Link>\r\n                <Link className=\"Footer-link\" to=\"/give-thanks\">Give Thanks</Link>\r\n                <Link className=\"Footer-link\" to=\"/groups\">Groups</Link>\r\n                <Link className=\"Footer-link\" to=\"/messages\">Messages</Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\r\nimport HeaderBar from './components/HeaderBar/HeaderBar';\r\nimport Homepage from './components/Homepage/Homepage';\r\nimport ThanksReceiver from \"./components/ThanksReceiver/ThanksReceiver\";\r\nimport GiveThanks from './components/GiveThanks/GiveThanks';\r\n\r\nimport \"./App.scss\";\r\nimport Footer from \"./components/Footer/Footer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Router>\r\n            <div className=\"App d-flex flex-column justify-content-between\">\r\n                <div className=\"mb-4\">\r\n                    <HeaderBar/>\r\n                    <div className=\"container container-fluid\">\r\n                        <Switch>\r\n                            <Route path=\"/messages\"/>\r\n                            <Route path=\"/groups\"/>\r\n                            <Route path=\"/thanks/:id\" component={ThanksReceiver}/>\r\n                            <Route path=\"/give-thanks\"><GiveThanks/></Route>\r\n                            <Route path=\"/\"><Homepage/></Route>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}